{"ast":null,"code":"import jsonNoMetales from'./jsonNoMetales';import jsonElementos from'./jsonElementos';import pasarAJsonAnfigenosHalogenos from'./pasarjsonAnfigenosHalogenos';import numeroDeCartas from'./palabrasClaves';import shuffle from'./barajar';import Elemento from'./objetosElementos';//Crea el array de sales binarias\nvar jsonDatosNoMetales=JSON.parse(jsonNoMetales);var noMetales=pasarAJsonAnfigenosHalogenos(jsonDatosNoMetales);//Para coger los datos de el json\nvar jsonDatosElementos=JSON.parse(jsonElementos);var arrayClases=pasarJsonAClases();//Array que contiene todas las clases\n//Baraja barajada\nwindow.$baraja=shuffle(crearBarajaOrdenada(arrayClases));window.$cartasDisponibles=window.$baraja.splice(0,numeroDeCartas);window.$cartasDisponibles.sort(function(a,b){if(a.z>b.z){return 1;}else if(a.z<b.z){return-1;}else{return 0;}});window.$cartaRobarUsada=false;//Funciones\n//Convertir en array numerico el string de las valencias ya que del json vienen en forma de texto\nfunction convertirArrayValencias(texto){//Mirar si el input es un numero o otra cosa\nif(typeof texto===\"number\"){//Si es número es decir que solo hay un numero ya que si hubiera más de un número estaría separado por una coma y sería un texto\nreturn Array.from([texto]);}//Si no es un numero ejectura esto\nelse{var coma=\",\";//Almacena el elemento que partira el array\n//Crea un array que cada casilla se corresponde un trozo del string partido| se parte cada vez que encuentre una coma\nvar arrayTexto=texto.split(coma);//Transforma las casilleas en numero\nfor(var i=0;i<arrayTexto.length;i++){//Coge la lonjitud del array y ejecuta el bucle a cada casilla del array\narrayTexto[i]=Number(arrayTexto[i]);//Hace que los textos pases a ser números, ya que los números negativos sonalmacenados en forma de textos y los numeros positivos son akmacenados en forma de número\n}return arrayTexto;// Devuelve el  array con el texto ya transformado en una array\n}}//Convertir todos los elementos del json en clases de ojetos\nfunction pasarJsonAClases(){var arrayContenedorObjetos=[];//Donde se guardaran las clases\n// Se ejecuta una vez por cada elemento del json, cada vez que se haga la varible i que hrá función de contador sera aumentada automáticamente \"+1\"\nfor(var i=0;i<jsonDatosElementos.length/*coger la lonjitud del json*/;i++){//Almacena en una variable en nuevo objeto que va a crear de forma temporal\nvar nuevoElemento=//constructor\nnew Elemento(jsonDatosElementos[i].z,//Coge del elemento i la z y se la pasa al objeto\njsonDatosElementos[i].nombre,//Coge del elemento i el nomabre y se la pasa al objeto\njsonDatosElementos[i].sq,//Coge del elemento i el simbolo químco y se la pasa al objeto\nconvertirArrayValencias(jsonDatosElementos[i].v),//Coge del elemento i la el  texto de las valencias y los combierte en una array de numeros\njsonDatosElementos[i].repeticion,//Coge del elemento i la repetición y se la pasa al objeto\njsonDatosElementos[i].puntos,//Coge del elemento i los grupos y se la pasa al objeto\njsonDatosElementos[i].grupo,//Coge del elemento i el grupo y se la pasa al objeto\njsonDatosElementos[i].tipo);arrayContenedorObjetos.push(nuevoElemento);//Añade a el array el nuebo objeto que se a creado\n}return arrayContenedorObjetos;//Devuelve el array que contiene todos los objetos\n}//Crea la baraja, es decir; añade un objeto por cada repetición\nfunction crearBarajaOrdenada(elementos){var array=[];//Definir el Array que almacenra los numeros\n//REpetir una vez por cada elemento\nfor(var i=0;i<elementos.length;i++){//Repetir tantas veces como numero de repeticiones tenga el elemento\nfor(var j=0;j<elementos[i].repeticion;j++){array.push(elementos[i]);//Guardar el objeto del elemento en el array que almacena los números\n}}return array;//Devolver Array de aleatorios\n}export{noMetales,arrayClases};","map":{"version":3,"sources":["/home/javi/Programacion/Web/Formulacion/client/src/main.js"],"names":["jsonNoMetales","jsonElementos","pasarAJsonAnfigenosHalogenos","numeroDeCartas","shuffle","Elemento","jsonDatosNoMetales","JSON","parse","noMetales","jsonDatosElementos","arrayClases","pasarJsonAClases","window","$baraja","crearBarajaOrdenada","$cartasDisponibles","splice","sort","a","b","z","$cartaRobarUsada","convertirArrayValencias","texto","Array","from","coma","arrayTexto","split","i","length","Number","arrayContenedorObjetos","nuevoElemento","nombre","sq","v","repeticion","puntos","grupo","tipo","push","elementos","array","j"],"mappings":"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","sourcesContent":["import jsonNoMetales from './jsonNoMetales'\nimport jsonElementos from './jsonElementos'\nimport pasarAJsonAnfigenosHalogenos from './pasarjsonAnfigenosHalogenos';\nimport numeroDeCartas from './palabrasClaves';\n\nimport shuffle from './barajar';\nimport Elemento from './objetosElementos';\n//Crea el array de sales binarias\n\nconst jsonDatosNoMetales = JSON.parse(jsonNoMetales);\n\nconst noMetales = pasarAJsonAnfigenosHalogenos(jsonDatosNoMetales);\n\n//Para coger los datos de el json\nvar jsonDatosElementos = JSON.parse(jsonElementos);\n\nvar arrayClases = pasarJsonAClases(); //Array que contiene todas las clases\n\n\n//Baraja barajada\nwindow.$baraja = shuffle(crearBarajaOrdenada(arrayClases));\n\nwindow.$cartasDisponibles = window.$baraja.splice(0, numeroDeCartas);\n\nwindow.$cartasDisponibles.sort(function (a, b) {\n    if (a.z > b.z) {\n        return 1;\n    }\n    else if (a.z < b.z) {\n        return -1;\n    }\n    else {\n        return 0;\n    }\n});\n\nwindow.$cartaRobarUsada = false\n\n//Funciones\n//Convertir en array numerico el string de las valencias ya que del json vienen en forma de texto\nfunction convertirArrayValencias(texto) {\n\n    //Mirar si el input es un numero o otra cosa\n    if (typeof texto === \"number\") {\n\n        //Si es número es decir que solo hay un numero ya que si hubiera más de un número estaría separado por una coma y sería un texto\n\n        return Array.from([texto]);\n\n    }\n    //Si no es un numero ejectura esto\n    else {\n\n        const coma = \",\"; //Almacena el elemento que partira el array\n\n        //Crea un array que cada casilla se corresponde un trozo del string partido| se parte cada vez que encuentre una coma\n        var arrayTexto = texto.split(coma);\n\n        //Transforma las casilleas en numero\n        for (var i = 0; i < arrayTexto.length; i++) {   //Coge la lonjitud del array y ejecuta el bucle a cada casilla del array\n\n            arrayTexto[i] = Number(arrayTexto[i]);  //Hace que los textos pases a ser números, ya que los números negativos sonalmacenados en forma de textos y los numeros positivos son akmacenados en forma de número\n\n        }\n\n        return arrayTexto;      // Devuelve el  array con el texto ya transformado en una array\n    }\n\n}\n\n//Convertir todos los elementos del json en clases de ojetos\nfunction pasarJsonAClases() {\n\n    var arrayContenedorObjetos = []; //Donde se guardaran las clases\n\n    // Se ejecuta una vez por cada elemento del json, cada vez que se haga la varible i que hrá función de contador sera aumentada automáticamente \"+1\"\n    for (var i = 0; i < jsonDatosElementos.length/*coger la lonjitud del json*/; i++) {\n\n        //Almacena en una variable en nuevo objeto que va a crear de forma temporal\n        var nuevoElemento =\n\n            //constructor\n            new Elemento(\n\n                jsonDatosElementos[i].z,                                //Coge del elemento i la z y se la pasa al objeto\n                jsonDatosElementos[i].nombre,                           //Coge del elemento i el nomabre y se la pasa al objeto\n                jsonDatosElementos[i].sq,                               //Coge del elemento i el simbolo químco y se la pasa al objeto\n                convertirArrayValencias(jsonDatosElementos[i].v),       //Coge del elemento i la el  texto de las valencias y los combierte en una array de numeros\n                jsonDatosElementos[i].repeticion,                       //Coge del elemento i la repetición y se la pasa al objeto\n                jsonDatosElementos[i].puntos,                           //Coge del elemento i los grupos y se la pasa al objeto\n                jsonDatosElementos[i].grupo,                            //Coge del elemento i el grupo y se la pasa al objeto\n                jsonDatosElementos[i].tipo\n\n            );\n\n        arrayContenedorObjetos.push(nuevoElemento);     //Añade a el array el nuebo objeto que se a creado\n\n\n    }\n\n    return arrayContenedorObjetos;          //Devuelve el array que contiene todos los objetos\n\n}\n\n//Crea la baraja, es decir; añade un objeto por cada repetición\nfunction crearBarajaOrdenada(elementos) {\n\n    var array = [];//Definir el Array que almacenra los numeros\n\n    //REpetir una vez por cada elemento\n    for (var i = 0; i < elementos.length; i++) {\n\n        //Repetir tantas veces como numero de repeticiones tenga el elemento\n        for (var j = 0; j < elementos[i].repeticion; j++) {\n\n            array.push(elementos[i]);    //Guardar el objeto del elemento en el array que almacena los números\n\n        }\n    }\n\n    return array;   //Devolver Array de aleatorios\n}\n\n\nexport { noMetales, arrayClases };\n"]},"metadata":{},"sourceType":"module"}