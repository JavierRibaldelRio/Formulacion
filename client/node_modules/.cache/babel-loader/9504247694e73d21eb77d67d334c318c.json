{"ast":null,"code":"//Función que compruba las ecepciones\nimport comprobarCompuestoBinario from\"./compuestoBinario\";import{crearMapaCompuestoPuntuacion}from\"./calcularPuntos\";import calcularPuntuacion from\"./calcularPuntos\";import descartarCartasUsadas from\"./eliminarCompuestos\";import crearMapaCompuesto from\"./crearMapaCompuesto\";import comprobarSalesBinariasVolatiles from\"./EncontrarSalesBinariasVolatiles\";import{oxido,hidruro,sal,metanoSistematico,amoniacoSistematico,aguaSistematica}from'./palabrasClaves';function identificarCompuestosExcepcionales(compuesto,mapaElementos,elementos){//Comprueba si es formulable\nvar formulable=false;switch(compuesto){case\"agua\"://Le manda la formula de agua para comprobar que lo puede formular\nformulable=comprobarCompuestoBinario(oxido,aguaSistematica,mapaElementos,elementos);break;case\"amoniaco\"://Le manda la formula de agua para comprobar que lo puede formular\nformulable=comprobarCompuestoBinario(hidruro,amoniacoSistematico,mapaElementos,elementos);break;case\"metano\":formulable=comprobarCompuestoBinario(hidruro,metanoSistematico,mapaElementos,elementos);break;case\"ozono\":mapaElementos.forEach(function(clave,valor){if(valor.nombre.toLowerCase()===\"oxígeno\"&&clave>=3){descartarCartasUsadas(crearMapaCompuesto(Array.from([valor.nombre.toLowerCase()]),Array.from([3])),elementos);//Calcula la puntuacion\nformulable=calcularPuntuacion(crearMapaCompuestoPuntuacion(Array.from([valor]),Array.from([3])));}});break;case\"sal común\":formulable=comprobarSalesBinariasVolatiles(sal,mapaElementos,elementos);break;default:formulable=false;break;}return formulable;}export default identificarCompuestosExcepcionales;","map":{"version":3,"sources":["/home/javi/Programacion/Web/Formulacion/client/src/excepciones.js"],"names":["comprobarCompuestoBinario","crearMapaCompuestoPuntuacion","calcularPuntuacion","descartarCartasUsadas","crearMapaCompuesto","comprobarSalesBinariasVolatiles","oxido","hidruro","sal","metanoSistematico","amoniacoSistematico","aguaSistematica","identificarCompuestosExcepcionales","compuesto","mapaElementos","elementos","formulable","forEach","clave","valor","nombre","toLowerCase","Array","from"],"mappings":"AAAA;AACA,MAAOA,CAAAA,yBAAP,KAAsC,oBAAtC,CACA,OAASC,4BAAT,KAA6C,kBAA7C,CACA,MAAOC,CAAAA,kBAAP,KAA+B,kBAA/B,CAEA,MAAOC,CAAAA,qBAAP,KAAkC,sBAAlC,CACA,MAAOC,CAAAA,kBAAP,KAA+B,sBAA/B,CACA,MAAOC,CAAAA,+BAAP,KAA4C,mCAA5C,CAEA,OAASC,KAAT,CAAgBC,OAAhB,CAAyBC,GAAzB,CAA8BC,iBAA9B,CAAiDC,mBAAjD,CAAsEC,eAAtE,KAA6F,kBAA7F,CAGA,QAASC,CAAAA,kCAAT,CAA4CC,SAA5C,CAAuDC,aAAvD,CAAsEC,SAAtE,CAAiF,CAE7E;AAEA,GAAIC,CAAAA,UAAU,CAAG,KAAjB,CAEA,OAAQH,SAAR,EAEI,IAAK,MAAL,CAEI;AACAG,UAAU,CAAGhB,yBAAyB,CAACM,KAAD,CAAQK,eAAR,CAAyBG,aAAzB,CAAwCC,SAAxC,CAAtC,CAEA,MAEJ,IAAK,UAAL,CACI;AACAC,UAAU,CAAGhB,yBAAyB,CAACO,OAAD,CAAUG,mBAAV,CAA+BI,aAA/B,CAA8CC,SAA9C,CAAtC,CAEA,MAGJ,IAAK,QAAL,CACIC,UAAU,CAAGhB,yBAAyB,CAACO,OAAD,CAAUE,iBAAV,CAA6BK,aAA7B,CAA4CC,SAA5C,CAAtC,CAEA,MAGJ,IAAK,OAAL,CAIID,aAAa,CAACG,OAAd,CAAsB,SAAUC,KAAV,CAAiBC,KAAjB,CAAwB,CAE1C,GAAIA,KAAK,CAACC,MAAN,CAAaC,WAAb,KAA+B,SAA/B,EAA4CH,KAAK,EAAI,CAAzD,CAA4D,CAGxDf,qBAAqB,CAACC,kBAAkB,CAACkB,KAAK,CAACC,IAAN,CAAW,CAACJ,KAAK,CAACC,MAAN,CAAaC,WAAb,EAAD,CAAX,CAAD,CAA2CC,KAAK,CAACC,IAAN,CAAW,CAAC,CAAD,CAAX,CAA3C,CAAnB,CAAgFR,SAAhF,CAArB,CAEA;AACAC,UAAU,CAAGd,kBAAkB,CAACD,4BAA4B,CAACqB,KAAK,CAACC,IAAN,CAAW,CAACJ,KAAD,CAAX,CAAD,CAAsBG,KAAK,CAACC,IAAN,CAAW,CAAC,CAAD,CAAX,CAAtB,CAA7B,CAA/B,CAEH,CAGJ,CAbD,EAeA,MAEJ,IAAK,WAAL,CAEIP,UAAU,CAAGX,+BAA+B,CAACG,GAAD,CAAMM,aAAN,CAAqBC,SAArB,CAA5C,CAEA,MAEJ,QACIC,UAAU,CAAG,KAAb,CACA,MAnDR,CAwDA,MAAOA,CAAAA,UAAP,CAEH,CAED,cAAeJ,CAAAA,kCAAf","sourcesContent":["//Función que compruba las ecepciones\nimport comprobarCompuestoBinario from \"./compuestoBinario\";\nimport { crearMapaCompuestoPuntuacion } from \"./calcularPuntos\";\nimport calcularPuntuacion from \"./calcularPuntos\";\n\nimport descartarCartasUsadas from \"./eliminarCompuestos\";\nimport crearMapaCompuesto from \"./crearMapaCompuesto\";\nimport comprobarSalesBinariasVolatiles from \"./EncontrarSalesBinariasVolatiles\";\n\nimport { oxido, hidruro, sal, metanoSistematico, amoniacoSistematico, aguaSistematica } from './palabrasClaves';\n\n\nfunction identificarCompuestosExcepcionales(compuesto, mapaElementos, elementos) {\n\n    //Comprueba si es formulable\n\n    var formulable = false;\n\n    switch (compuesto) {\n\n        case \"agua\":\n\n            //Le manda la formula de agua para comprobar que lo puede formular\n            formulable = comprobarCompuestoBinario(oxido, aguaSistematica, mapaElementos, elementos);\n\n            break;\n\n        case \"amoniaco\":\n            //Le manda la formula de agua para comprobar que lo puede formular\n            formulable = comprobarCompuestoBinario(hidruro, amoniacoSistematico, mapaElementos, elementos);\n\n            break;\n\n\n        case \"metano\":\n            formulable = comprobarCompuestoBinario(hidruro, metanoSistematico, mapaElementos, elementos);\n\n            break;\n\n\n        case \"ozono\":\n\n\n\n            mapaElementos.forEach(function (clave, valor) {\n\n                if (valor.nombre.toLowerCase() === \"oxígeno\" && clave >= 3) {\n\n\n                    descartarCartasUsadas(crearMapaCompuesto(Array.from([valor.nombre.toLowerCase()]), Array.from([3])), elementos);\n\n                    //Calcula la puntuacion\n                    formulable = calcularPuntuacion(crearMapaCompuestoPuntuacion(Array.from([valor]), Array.from([3])));\n\n                }\n\n\n            });\n\n            break;\n\n        case \"sal común\":\n\n            formulable = comprobarSalesBinariasVolatiles(sal, mapaElementos, elementos);\n\n            break;\n\n        default:\n            formulable = false;\n            break;\n\n\n    }\n\n    return formulable;\n\n}\n\nexport default identificarCompuestosExcepcionales;"]},"metadata":{},"sourceType":"module"}