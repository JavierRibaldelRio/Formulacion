{"ast":null,"code":"//Función que comprueba si es un hidruro\nfunction averiguarHalogenosYAnfigenos(texto, mapa, prefijoHidrogeno, elementosDisponibles) {\n  //Array de cartas de todos los Halógenos y Anfígenos\n  var cartasHidracidos = encontrarEnBancaAnfigenosYHalogenos(); //Separa el texto en palabras y coge la primera\n\n  var primerElemento = texto.split(\" \")[0]; //Almacena el elemento sin el prefijo\n\n  var primerElementoSinPrefijoConSufijo = extraerPrefijos(primerElemento); //Almacena el prefijo del Primer Elemento\n\n  var prefijoPrimerElemento; //Primer elmento almacenado correctamente\n\n  var elemento1;\n\n  for (var i = 0; i < cartasHidracidos.length; i++) {\n    //Primer elemento\n    switch (primerElementoSinPrefijoConSufijo.substr(0, 2)) {\n      case cartasHidracidos[i].nombre.toLowerCase().substr(0, 2):\n        elemento1 = cartasHidracidos[i].nombre.toLowerCase();\n        break;\n\n      case sulfuro.substr(0, 2):\n        elemento1 = \"azufre\";\n        break;\n    }\n  }\n\n  if (elemento1 === undefined) {\n    return false;\n  }\n\n  if (primerElemento.startsWith(elemento1.substr(0, 2)) || elemento1 === \"azufre\") {\n    prefijoPrimerElemento = 1;\n  } else {\n    prefijoPrimerElemento = encontrarPrefijo(primerElemento.split(elemento1)[0]);\n  }\n\n  if (elemento1.grupo < 16) {\n    return false;\n  }\n\n  const salida = comprobarSiPuedeGenerarCompuestos(elemento1, prefijoPrimerElemento, \"hidrógeno\", prefijoHidrogeno, mapa);\n\n  if (typeof salida === \"number\") {\n    const elementosUsados = [\"hidrógeno\", elemento1];\n    const repeticionesElementosUsados = [prefijoHidrogeno, prefijoPrimerElemento];\n    const mapaCompuesto = crearMapaCompuesto(elementosUsados, repeticionesElementosUsados);\n    descartarCartasUsadas(mapaCompuesto, elementosDisponibles);\n    return salida;\n  } else {\n    return false;\n  }\n\n  function encontrarEnBancaAnfigenosYHalogenos() {\n    var arrayDeHidracidos = [];\n    elemento1;\n\n    for (var i = 0; i < elementosDisponibles.length; i++) {\n      if (elementosDisponibles[i].grupo === 16 || elementosDisponibles[i].grupo === 17) {\n        arrayDeHidracidos.push(elementosDisponibles[i]);\n      }\n    }\n\n    return arrayDeHidracidos;\n  }\n}\n\nexport default averiguarHalogenosYAnfigenos;","map":{"version":3,"sources":["/home/javi/Programacion/Web/Formulacion/src/averiguarHalogenosAnfigenos.js"],"names":["averiguarHalogenosYAnfigenos","texto","mapa","prefijoHidrogeno","elementosDisponibles","cartasHidracidos","encontrarEnBancaAnfigenosYHalogenos","primerElemento","split","primerElementoSinPrefijoConSufijo","extraerPrefijos","prefijoPrimerElemento","elemento1","i","length","substr","nombre","toLowerCase","sulfuro","undefined","startsWith","encontrarPrefijo","grupo","salida","comprobarSiPuedeGenerarCompuestos","elementosUsados","repeticionesElementosUsados","mapaCompuesto","crearMapaCompuesto","descartarCartasUsadas","arrayDeHidracidos","push"],"mappings":"AAAA;AACA,SAASA,4BAAT,CAAsCC,KAAtC,EAA6CC,IAA7C,EAAmDC,gBAAnD,EAAqEC,oBAArE,EAA2F;AAEvF;AACA,MAAIC,gBAAgB,GAAGC,mCAAmC,EAA1D,CAHuF,CAKvF;;AACA,MAAIC,cAAc,GAAGN,KAAK,CAACO,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAArB,CANuF,CAQvF;;AACA,MAAIC,iCAAiC,GAAGC,eAAe,CAACH,cAAD,CAAvD,CATuF,CAWvF;;AACA,MAAII,qBAAJ,CAZuF,CAcvF;;AACA,MAAIC,SAAJ;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,gBAAgB,CAACS,MAArC,EAA6CD,CAAC,EAA9C,EAAkD;AAE9C;AACA,YAAQJ,iCAAiC,CAACM,MAAlC,CAAyC,CAAzC,EAA4C,CAA5C,CAAR;AAEI,WAAKV,gBAAgB,CAACQ,CAAD,CAAhB,CAAoBG,MAApB,CAA2BC,WAA3B,GAAyCF,MAAzC,CAAgD,CAAhD,EAAmD,CAAnD,CAAL;AAEIH,QAAAA,SAAS,GAAGP,gBAAgB,CAACQ,CAAD,CAAhB,CAAoBG,MAApB,CAA2BC,WAA3B,EAAZ;AAEA;;AAEJ,WAAKC,OAAO,CAACH,MAAR,CAAe,CAAf,EAAkB,CAAlB,CAAL;AAEIH,QAAAA,SAAS,GAAG,QAAZ;AAEA;AAZR;AAcH;;AAED,MAAIA,SAAS,KAAKO,SAAlB,EAA6B;AAEzB,WAAO,KAAP;AAEH;;AAED,MAAIZ,cAAc,CAACa,UAAf,CAA0BR,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoB,CAApB,CAA1B,KAAqDH,SAAS,KAAK,QAAvE,EAAiF;AAE7ED,IAAAA,qBAAqB,GAAG,CAAxB;AACH,GAHD,MAKK;AACDA,IAAAA,qBAAqB,GAAGU,gBAAgB,CAACd,cAAc,CAACC,KAAf,CAAqBI,SAArB,EAAgC,CAAhC,CAAD,CAAxC;AAGH;;AACD,MAAIA,SAAS,CAACU,KAAV,GAAkB,EAAtB,EAA0B;AAEtB,WAAO,KAAP;AAEH;;AAGD,QAAMC,MAAM,GAAGC,iCAAiC,CAACZ,SAAD,EAAYD,qBAAZ,EAAmC,WAAnC,EAAgDR,gBAAhD,EAAkED,IAAlE,CAAhD;;AAEA,MAAI,OAAOqB,MAAP,KAAkB,QAAtB,EAAgC;AAE5B,UAAME,eAAe,GAAG,CAAC,WAAD,EAAcb,SAAd,CAAxB;AAEA,UAAMc,2BAA2B,GAAG,CAACvB,gBAAD,EAAmBQ,qBAAnB,CAApC;AAEA,UAAMgB,aAAa,GAAGC,kBAAkB,CAACH,eAAD,EAAkBC,2BAAlB,CAAxC;AAEAG,IAAAA,qBAAqB,CAACF,aAAD,EAAgBvB,oBAAhB,CAArB;AAEA,WAAOmB,MAAP;AAEH,GAZD,MAYO;AAGH,WAAO,KAAP;AAEH;;AAED,WAASjB,mCAAT,GAA+C;AAE3C,QAAIwB,iBAAiB,GAAG,EAAxB;AAA4BlB,IAAAA,SAAS;;AAErC,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,oBAAoB,CAACU,MAAzC,EAAiDD,CAAC,EAAlD,EAAsD;AAElD,UAAIT,oBAAoB,CAACS,CAAD,CAApB,CAAwBS,KAAxB,KAAkC,EAAlC,IAAwClB,oBAAoB,CAACS,CAAD,CAApB,CAAwBS,KAAxB,KAAkC,EAA9E,EAAkF;AAE9EQ,QAAAA,iBAAiB,CAACC,IAAlB,CAAuB3B,oBAAoB,CAACS,CAAD,CAA3C;AAEH;AAEJ;;AAED,WAAOiB,iBAAP;AAEH;AAEJ;;AAED,eAAe9B,4BAAf","sourcesContent":["//Función que comprueba si es un hidruro\nfunction averiguarHalogenosYAnfigenos(texto, mapa, prefijoHidrogeno, elementosDisponibles) {\n\n    //Array de cartas de todos los Halógenos y Anfígenos\n    var cartasHidracidos = encontrarEnBancaAnfigenosYHalogenos();\n\n    //Separa el texto en palabras y coge la primera\n    var primerElemento = texto.split(\" \")[0];\n\n    //Almacena el elemento sin el prefijo\n    var primerElementoSinPrefijoConSufijo = extraerPrefijos(primerElemento);\n\n    //Almacena el prefijo del Primer Elemento\n    var prefijoPrimerElemento;\n\n    //Primer elmento almacenado correctamente\n    var elemento1;\n\n    for (var i = 0; i < cartasHidracidos.length; i++) {\n\n        //Primer elemento\n        switch (primerElementoSinPrefijoConSufijo.substr(0, 2)) {\n\n            case cartasHidracidos[i].nombre.toLowerCase().substr(0, 2):\n\n                elemento1 = cartasHidracidos[i].nombre.toLowerCase();\n\n                break;\n\n            case sulfuro.substr(0, 2):\n\n                elemento1 = \"azufre\";\n\n                break;\n        }\n    }\n\n    if (elemento1 === undefined) {\n\n        return false;\n\n    }\n\n    if (primerElemento.startsWith(elemento1.substr(0, 2)) || elemento1 === \"azufre\") {\n\n        prefijoPrimerElemento = 1;\n    }\n\n    else {\n        prefijoPrimerElemento = encontrarPrefijo(primerElemento.split(elemento1)[0]);\n\n\n    }\n    if (elemento1.grupo < 16) {\n\n        return false;\n\n    }\n\n\n    const salida = comprobarSiPuedeGenerarCompuestos(elemento1, prefijoPrimerElemento, \"hidrógeno\", prefijoHidrogeno, mapa);\n\n    if (typeof salida === \"number\") {\n\n        const elementosUsados = [\"hidrógeno\", elemento1];\n\n        const repeticionesElementosUsados = [prefijoHidrogeno, prefijoPrimerElemento];\n\n        const mapaCompuesto = crearMapaCompuesto(elementosUsados, repeticionesElementosUsados);\n\n        descartarCartasUsadas(mapaCompuesto, elementosDisponibles);\n\n        return salida\n\n    } else {\n\n\n        return false\n\n    }\n\n    function encontrarEnBancaAnfigenosYHalogenos() {\n\n        var arrayDeHidracidos = []; elemento1\n\n        for (var i = 0; i < elementosDisponibles.length; i++) {\n\n            if (elementosDisponibles[i].grupo === 16 || elementosDisponibles[i].grupo === 17) {\n\n                arrayDeHidracidos.push(elementosDisponibles[i]);\n\n            }\n\n        }\n\n        return arrayDeHidracidos;\n\n    }\n\n}\n\nexport default averiguarHalogenosYAnfigenos;"]},"metadata":{},"sourceType":"module"}