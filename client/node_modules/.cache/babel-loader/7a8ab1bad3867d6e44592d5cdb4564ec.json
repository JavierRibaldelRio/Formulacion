{"ast":null,"code":"var _jsxFileName = \"/home/javi/Programacion/Web/Formulacion/client/src/Validar.js\";\nimport comprobarCompuesto from './funcionCompuesto';\nimport reproducirSonido from './ReproducirMusica';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar React = require('react'); //Activa REACt\n//\n\n\nclass Validacion extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \" \"\n    }; //Estado\n  } //Añadir al estao el valor del input\n\n\n  cambiarTexto(e) {\n    this.setState({\n      text: e.target.value\n    });\n  } //Ejecutar la función de pasarcompuesto\n\n\n  pasarDatosFuncionCompuesto(e) {\n    e.preventDefault();\n    document.getElementById(\"veri\").reset(); //Almacena en forma de variable las propiedades\n\n    var elementosDisponiblesOrdenados = [...this.props.elementosDisponibles]; //Ordena\n\n    elementosDisponiblesOrdenados = elementosDisponiblesOrdenados.sort(function (a, b) {\n      if (a.z > b.z) {\n        return 1;\n      } else if (a.z < b.z) {\n        return -1;\n      } else {\n        return 0;\n      }\n    }); //Salida de la función que se ocupa de comprobar si el compuesro es correcto\n\n    const salida = comprobarCompuesto(elementosDisponiblesOrdenados, this.state.text); //Si la salida es un número\n\n    if (typeof salida === \"number\") {\n      //Manda la notificación de correcto\n      this.props.funcionNotificar(\"Has obtenido \" + salida + \" puntos.\", true); //Reproduce el sonido de correcto\n\n      reproducirSonido(true); //Actualiza el estado\n\n      this.props.funcionAlPulsar(salida, this.state.text.toLocaleLowerCase());\n    } //Si es falso\n    else if (salida === false) {\n        //Reproduce el sonido de incorrecto\n        reproducirSonido(false); //manda la notificación\n\n        this.props.funcionNotificar(\"Este compuesto no se puede crear\", false);\n      }\n\n    if (window.$baraja.lenght < 8) {\n      this.props.acabar();\n    }\n  } //Lo que devulve\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"Zona_Verificacion\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Inserte el compuesto:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: this.pasarDatosFuncionCompuesto.bind(this),\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: this.cambiarTexto.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                disabled: !this.props.jugando,\n                className: \"Boton_Verificacion Boton_Normal\",\n                children: \"Validar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Validacion;","map":{"version":3,"sources":["/home/javi/Programacion/Web/Formulacion/client/src/Validar.js"],"names":["comprobarCompuesto","reproducirSonido","React","require","Validacion","Component","constructor","props","state","text","cambiarTexto","e","setState","target","value","pasarDatosFuncionCompuesto","preventDefault","document","getElementById","reset","elementosDisponiblesOrdenados","elementosDisponibles","sort","a","b","z","salida","funcionNotificar","funcionAlPulsar","toLocaleLowerCase","window","$baraja","lenght","acabar","render","bind","jugando"],"mappings":"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","sourcesContent":["import comprobarCompuesto from './funcionCompuesto';\nimport reproducirSonido from './ReproducirMusica';\n\n\nvar React = require('react');   //Activa REACt\n//\n\n\nclass Validacion extends React.Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = { text: \" \" };    //Estado\n\n    }\n\n\n    //Añadir al estao el valor del input\n    cambiarTexto(e) {\n\n\n        this.setState({ text: e.target.value });\n\n    }\n\n    //Ejecutar la función de pasarcompuesto\n    pasarDatosFuncionCompuesto(e) {\n        e.preventDefault();\n\n        document.getElementById(\"veri\").reset();        //Almacena en forma de variable las propiedades\n        var elementosDisponiblesOrdenados = [...this.props.elementosDisponibles]\n\n        //Ordena\n        elementosDisponiblesOrdenados = elementosDisponiblesOrdenados.sort(function (a, b) {\n            if (a.z > b.z) {\n                return 1;\n            }\n            else if (a.z < b.z) {\n                return -1;\n            }\n            else {\n                return 0;\n            }\n        });\n\n\n        //Salida de la función que se ocupa de comprobar si el compuesro es correcto\n        const salida = comprobarCompuesto(elementosDisponiblesOrdenados, this.state.text);\n\n        //Si la salida es un número\n        if (typeof salida === \"number\") {\n\n            //Manda la notificación de correcto\n            this.props.funcionNotificar(\"Has obtenido \" + salida + \" puntos.\", true);\n\n            //Reproduce el sonido de correcto\n\n            reproducirSonido(true);\n\n            //Actualiza el estado\n            this.props.funcionAlPulsar(salida, this.state.text.toLocaleLowerCase());\n\n        }\n\n        //Si es falso\n        else if (salida === false) {\n\n            //Reproduce el sonido de incorrecto\n\n            reproducirSonido(false);\n\n            //manda la notificación\n            this.props.funcionNotificar(\"Este compuesto no se puede crear\", false);\n\n        }\n\n        if (window.$baraja.lenght < 8) {\n            this.props.acabar();\n        }\n    }\n\n    //Lo que devulve\n    render() {\n\n        return (\n\n\n            <table className=\"Zona_Verificacion\">\n\n                <tbody>\n\n                    <tr>\n\n                        <td>\n\n                            Inserte el compuesto:\n\n                        </td>\n\n                    </tr>\n                    <tr>\n                        <td>\n                            <form onSubmit={this.pasarDatosFuncionCompuesto.bind(this)}>\n\n                                <input onChange={this.cambiarTexto.bind(this)} />\n                                <br></br>\n\n\n                                {/*Boton */}\n                                <button type=\"submit\" disabled={!this.props.jugando} className=\"Boton_Verificacion Boton_Normal\" >Validar</button>\n\n                            </form>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        )\n    }\n}\n\nexport default Validacion;"]},"metadata":{},"sourceType":"module"}