{"ast":null,"code":"//Función que sribe para saver si el elemento se encuenttra en el array\nfunction comprobarSiHayElementoPorNombre(elementoABuscar/*texto*/,elementosPosibles/*Array*/){//Lo que se va a devolver\nvar valorADevolver;//Elimina espacios a principio y a final de palabra\nelementoABuscar=elementoABuscar.trim();//Pasa a minusculas\nelementoABuscar=elementoABuscar.toLowerCase();//Deveulve el objeto cumpla las condiciones\nvalorADevolver=elementosPosibles.find(hayElemento);//si el valor de valorADevolver esta indefinido, es decir que no hay ningun elemento que cumpla las condicioenes devuelve falso\nif(valorADevolver===undefined){valorADevolver=false;}return valorADevolver;function hayElemento(elemento){//Quita espacios y pas a minusculas\nreturn elemento.nombre.trim().toLowerCase()===elementoABuscar;}}export default comprobarSiHayElementoPorNombre;","map":{"version":3,"sources":["/home/javi/Programacion/Web/Formulacion/client/src/comprobarSiHayPorNombre.js"],"names":["comprobarSiHayElementoPorNombre","elementoABuscar","elementosPosibles","valorADevolver","trim","toLowerCase","find","hayElemento","undefined","elemento","nombre"],"mappings":"AAAA;AAGA,QAASA,CAAAA,+BAAT,CAAyCC,eAAe,SAAxD,CAAmEC,iBAAiB,SAApF,CAA+F,CAE3F;AACA,GAAIC,CAAAA,cAAJ,CAEA;AACAF,eAAe,CAAGA,eAAe,CAACG,IAAhB,EAAlB,CAEA;AACAH,eAAe,CAAGA,eAAe,CAACI,WAAhB,EAAlB,CAEA;AACAF,cAAc,CAAGD,iBAAiB,CAACI,IAAlB,CAAuBC,WAAvB,CAAjB,CAEA;AACA,GAAIJ,cAAc,GAAKK,SAAvB,CAAkC,CAE9BL,cAAc,CAAG,KAAjB,CACH,CAGD,MAAOA,CAAAA,cAAP,CAEA,QAASI,CAAAA,WAAT,CAAqBE,QAArB,CAA+B,CAE3B;AACA,MAAOA,CAAAA,QAAQ,CAACC,MAAT,CAAgBN,IAAhB,GAAuBC,WAAvB,KAAyCJ,eAAhD,CAEH,CACJ,CAED,cAAeD,CAAAA,+BAAf","sourcesContent":["//Función que sribe para saver si el elemento se encuenttra en el array\n\n\nfunction comprobarSiHayElementoPorNombre(elementoABuscar/*texto*/, elementosPosibles/*Array*/) {\n\n    //Lo que se va a devolver\n    var valorADevolver;\n\n    //Elimina espacios a principio y a final de palabra\n    elementoABuscar = elementoABuscar.trim();\n\n    //Pasa a minusculas\n    elementoABuscar = elementoABuscar.toLowerCase();\n\n    //Deveulve el objeto cumpla las condiciones\n    valorADevolver = elementosPosibles.find(hayElemento);\n\n    //si el valor de valorADevolver esta indefinido, es decir que no hay ningun elemento que cumpla las condicioenes devuelve falso\n    if (valorADevolver === undefined) {\n\n        valorADevolver = false;\n    }\n\n\n    return valorADevolver\n\n    function hayElemento(elemento) {\n\n        //Quita espacios y pas a minusculas\n        return elemento.nombre.trim().toLowerCase() === elementoABuscar;\n\n    }\n}\n\nexport default comprobarSiHayElementoPorNombre;\n"]},"metadata":{},"sourceType":"module"}