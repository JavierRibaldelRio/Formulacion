{"ast":null,"code":"var _jsxFileName = \"/home/javi/Programacion/Web/Formulacion/Client/src/TablaRecords.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar React = require('react'); //Activa REACt\n\n\nconst {\n  default: FilaRecords\n} = require('./FilaRecords');\n\nclass TablaRecords extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    //Crea una array que almacena el contenido de la tabla\n    var contenidoTabla = []; //Copia records\n\n    var records = this.props.records; //Se repite una vez por cada uno de los records\n\n    for (var i = 0; i < records.length; i++) {\n      //Añade el numero más uno para edivar que salga el número cero, los puntos y el nombr ede usuaroi\n      contenidoTabla.push( /*#__PURE__*/_jsxDEV(FilaRecords, {\n        n: i + 1,\n        nick: records[i].nick,\n        puntos: records[i].puntos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 33\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      id: \"Tabla_Records\",\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"POSICI\\xD3N\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"NICKNAME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"PUNTOS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), //Enseña todos los contenidos de la tabal\n      contenidoTabla.map(v => {\n        return v;\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default TablaRecords;","map":{"version":3,"sources":["/home/javi/Programacion/Web/Formulacion/Client/src/TablaRecords.js"],"names":["React","require","default","FilaRecords","TablaRecords","Component","constructor","props","render","contenidoTabla","records","i","length","push","nick","puntos","map","v"],"mappings":";;;AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB,C,CAAgC;;;AAChC,MAAM;AAAEC,EAAAA,OAAO,EAAEC;AAAX,IAA2BF,OAAO,CAAC,eAAD,CAAxC;;AAEA,MAAMG,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA2C;AAGvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AAEDC,EAAAA,MAAM,GAAG;AAEL;AACA,QAAIC,cAAc,GAAG,EAArB,CAHK,CAKL;;AACA,QAAIC,OAAO,GAAG,KAAKH,KAAL,CAAWG,OAAzB,CANK,CAOL;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,OAAO,CAACE,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AAErC;AACAF,MAAAA,cAAc,CAACI,IAAf,eAAoB,QAAC,WAAD;AAAa,QAAA,CAAC,EAAEF,CAAC,GAAG,CAApB;AAAuB,QAAA,IAAI,EAAED,OAAO,CAACC,CAAD,CAAP,CAAWG,IAAxC;AAA8C,QAAA,MAAM,EAAEJ,OAAO,CAACC,CAAD,CAAP,CAAWI;AAAjE;AAAA;AAAA;AAAA;AAAA,cAApB;AAEH;;AAID,wBAGI;AAAO,MAAA,EAAE,EAAC,eAAV;AAAA,8BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAOK;AAEGN,MAAAA,cAAc,CAACO,GAAf,CAAoBC,CAAD,IAAO;AACtB,eAAQA,CAAR;AACH,OAFD,CATR;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAuBH;;AA/CsC;;AAkD3C,eAAeb,YAAf","sourcesContent":["var React = require('react');   //Activa REACt\nconst { default: FilaRecords } = require('./FilaRecords');\n\nclass TablaRecords extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n\n        //Crea una array que almacena el contenido de la tabla\n        var contenidoTabla = [];\n\n        //Copia records\n        var records = this.props.records;\n        //Se repite una vez por cada uno de los records\n        for (var i = 0; i < records.length; i++) {\n\n            //Añade el numero más uno para edivar que salga el número cero, los puntos y el nombr ede usuaroi\n            contenidoTabla.push(<FilaRecords n={i + 1} nick={records[i].nick} puntos={records[i].puntos} />);\n\n        }\n\n\n\n        return (\n\n\n            <table id=\"Tabla_Records\">\n                <tr>\n                    <th>POSICIÓN</th>\n                    <th>NICKNAME</th>\n                    <th>PUNTOS</th>\n                </tr>\n\n                {//Enseña todos los contenidos de la tabal\n\n                    contenidoTabla.map((v) => {\n                        return (v);\n                    })\n\n                }\n\n            </table>\n\n        )\n\n\n    }\n}\n\nexport default TablaRecords"]},"metadata":{},"sourceType":"module"}