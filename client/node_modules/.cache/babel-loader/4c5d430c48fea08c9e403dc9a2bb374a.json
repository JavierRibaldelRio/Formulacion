{"ast":null,"code":"import jsonNoMetales from './jsonNoMetales';\nimport jsonElementos from './jsonElementos';\nimport pasarAJsonAnfigenosHalogenos from './pasarjsonAnfigenosHalogenos';\nimport numeroDeCartas from './palabrasClaves';\nimport shuffle from './barajar';\nimport Elemento from './objetosElementos'; //Crea el array de sales binarias\n\nconst jsonDatosNoMetales = JSON.parse(jsonNoMetales);\nconst noMetales = pasarAJsonAnfigenosHalogenos(jsonDatosNoMetales); //Para coger los datos de el json\n\nvar jsonDatosElementos = JSON.parse(jsonElementos);\nvar arrayClases = pasarJsonAClases(); //Array que contiene todas las clases\n//Baraja barajada\n\nwindow.$baraja = shuffle(crearBarajaOrdenada(arrayClases));\nwindow.$cartasDisponibles = window.$baraja.splice(0, numeroDeCartas);\nwindow.$cartasDisponibles.sort(function (a, b) {\n  if (a.z > b.z) {\n    return 1;\n  } else if (a.z < b.z) {\n    return -1;\n  } else {\n    return 0;\n  }\n});\nwindow.$cartaRobarUsada = false; //Funciones\n//Convertir en array numerico el string de las valencias ya que del json vienen en forma de texto\n\nfunction convertirArrayValencias(texto) {\n  //Mirar si el input es un numero o otra cosa\n  if (typeof texto === \"number\") {\n    //Si es número es decir que solo hay un numero ya que si hubiera más de un número estaría separado por una coma y sería un texto\n    return Array.from([texto]);\n  } //Si no es un numero ejectura esto\n  else {\n      const coma = \",\"; //Almacena el elemento que partira el array\n      //Crea un array que cada casilla se corresponde un trozo del string partido| se parte cada vez que encuentre una coma\n\n      var arrayTexto = texto.split(coma); //Transforma las casilleas en numero\n\n      for (var i = 0; i < arrayTexto.length; i++) {\n        //Coge la lonjitud del array y ejecuta el bucle a cada casilla del array\n        arrayTexto[i] = Number(arrayTexto[i]); //Hace que los textos pases a ser números, ya que los números negativos sonalmacenados en forma de textos y los numeros positivos son akmacenados en forma de número\n      }\n\n      return arrayTexto; // Devuelve el  array con el texto ya transformado en una array\n    }\n} //Convertir todos los elementos del json en clases de ojetos\n\n\nfunction pasarJsonAClases() {\n  var arrayContenedorObjetos = []; //Donde se guardaran las clases\n  // Se ejecuta una vez por cada elemento del json, cada vez que se haga la varible i que hrá función de contador sera aumentada automáticamente \"+1\"\n\n  for (var i = 0; i < jsonDatosElementos.length\n  /*coger la lonjitud del json*/\n  ; i++) {\n    //Almacena en una variable en nuevo objeto que va a crear de forma temporal\n    var nuevoElemento = //constructor\n    new Elemento(jsonDatosElementos[i].z, //Coge del elemento i la z y se la pasa al objeto\n    jsonDatosElementos[i].nombre, //Coge del elemento i el nomabre y se la pasa al objeto\n    jsonDatosElementos[i].sq, //Coge del elemento i el simbolo químco y se la pasa al objeto\n    convertirArrayValencias(jsonDatosElementos[i].v), //Coge del elemento i la el  texto de las valencias y los combierte en una array de numeros\n    jsonDatosElementos[i].repeticion, //Coge del elemento i la repetición y se la pasa al objeto\n    jsonDatosElementos[i].puntos, //Coge del elemento i los grupos y se la pasa al objeto\n    jsonDatosElementos[i].grupo, //Coge del elemento i el grupo y se la pasa al objeto\n    jsonDatosElementos[i].tipo);\n    arrayContenedorObjetos.push(nuevoElemento); //Añade a el array el nuebo objeto que se a creado\n  }\n\n  return arrayContenedorObjetos; //Devuelve el array que contiene todos los objetos\n} //Crea la baraja, es decir; añade un objeto por cada repetición\n\n\nfunction crearBarajaOrdenada(elementos) {\n  var array = []; //Definir el Array que almacenra los numeros\n  //REpetir una vez por cada elemento\n\n  for (var i = 0; i < elementos.length; i++) {\n    //Repetir tantas veces como numero de repeticiones tenga el elemento\n    for (var j = 0; j < elementos[i].repeticion; j++) {\n      array.push(elementos[i]); //Guardar el objeto del elemento en el array que almacena los números\n    }\n  }\n\n  return array; //Devolver Array de aleatorios\n}\n\nexport { noMetales, arrayClases };","map":{"version":3,"sources":["/home/javi/Programacion/Web/Formulacion/Client/src/main.js"],"names":["jsonNoMetales","jsonElementos","pasarAJsonAnfigenosHalogenos","numeroDeCartas","shuffle","Elemento","jsonDatosNoMetales","JSON","parse","noMetales","jsonDatosElementos","arrayClases","pasarJsonAClases","window","$baraja","crearBarajaOrdenada","$cartasDisponibles","splice","sort","a","b","z","$cartaRobarUsada","convertirArrayValencias","texto","Array","from","coma","arrayTexto","split","i","length","Number","arrayContenedorObjetos","nuevoElemento","nombre","sq","v","repeticion","puntos","grupo","tipo","push","elementos","array","j"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,4BAAP,MAAyC,+BAAzC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,oBAArB,C,CACA;;AAEA,MAAMC,kBAAkB,GAAGC,IAAI,CAACC,KAAL,CAAWR,aAAX,CAA3B;AAEA,MAAMS,SAAS,GAAGP,4BAA4B,CAACI,kBAAD,CAA9C,C,CAEA;;AACA,IAAII,kBAAkB,GAAGH,IAAI,CAACC,KAAL,CAAWP,aAAX,CAAzB;AAEA,IAAIU,WAAW,GAAGC,gBAAgB,EAAlC,C,CAAsC;AAGtC;;AACAC,MAAM,CAACC,OAAP,GAAiBV,OAAO,CAACW,mBAAmB,CAACJ,WAAD,CAApB,CAAxB;AAEAE,MAAM,CAACG,kBAAP,GAA4BH,MAAM,CAACC,OAAP,CAAeG,MAAf,CAAsB,CAAtB,EAAyBd,cAAzB,CAA5B;AAEAU,MAAM,CAACG,kBAAP,CAA0BE,IAA1B,CAA+B,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC3C,MAAID,CAAC,CAACE,CAAF,GAAMD,CAAC,CAACC,CAAZ,EAAe;AACX,WAAO,CAAP;AACH,GAFD,MAGK,IAAIF,CAAC,CAACE,CAAF,GAAMD,CAAC,CAACC,CAAZ,EAAe;AAChB,WAAO,CAAC,CAAR;AACH,GAFI,MAGA;AACD,WAAO,CAAP;AACH;AACJ,CAVD;AAYAR,MAAM,CAACS,gBAAP,GAA0B,KAA1B,C,CAEA;AACA;;AACA,SAASC,uBAAT,CAAiCC,KAAjC,EAAwC;AAEpC;AACA,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAE3B;AAEA,WAAOC,KAAK,CAACC,IAAN,CAAW,CAACF,KAAD,CAAX,CAAP;AAEH,GAND,CAOA;AAPA,OAQK;AAED,YAAMG,IAAI,GAAG,GAAb,CAFC,CAEiB;AAElB;;AACA,UAAIC,UAAU,GAAGJ,KAAK,CAACK,KAAN,CAAYF,IAAZ,CAAjB,CALC,CAOD;;AACA,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,UAAU,CAACG,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAAI;AAE5CF,QAAAA,UAAU,CAACE,CAAD,CAAV,GAAgBE,MAAM,CAACJ,UAAU,CAACE,CAAD,CAAX,CAAtB,CAFwC,CAEA;AAE3C;;AAED,aAAOF,UAAP,CAdC,CAcuB;AAC3B;AAEJ,C,CAED;;;AACA,SAAShB,gBAAT,GAA4B;AAExB,MAAIqB,sBAAsB,GAAG,EAA7B,CAFwB,CAES;AAEjC;;AACA,OAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGpB,kBAAkB,CAACqB;AAAM;AAA7C,IAA6ED,CAAC,EAA9E,EAAkF;AAE9E;AACA,QAAII,aAAa,GAEb;AACA,QAAI7B,QAAJ,CAEIK,kBAAkB,CAACoB,CAAD,CAAlB,CAAsBT,CAF1B,EAE4D;AACxDX,IAAAA,kBAAkB,CAACoB,CAAD,CAAlB,CAAsBK,MAH1B,EAG4D;AACxDzB,IAAAA,kBAAkB,CAACoB,CAAD,CAAlB,CAAsBM,EAJ1B,EAI4D;AACxDb,IAAAA,uBAAuB,CAACb,kBAAkB,CAACoB,CAAD,CAAlB,CAAsBO,CAAvB,CAL3B,EAK4D;AACxD3B,IAAAA,kBAAkB,CAACoB,CAAD,CAAlB,CAAsBQ,UAN1B,EAM4D;AACxD5B,IAAAA,kBAAkB,CAACoB,CAAD,CAAlB,CAAsBS,MAP1B,EAO4D;AACxD7B,IAAAA,kBAAkB,CAACoB,CAAD,CAAlB,CAAsBU,KAR1B,EAQ4D;AACxD9B,IAAAA,kBAAkB,CAACoB,CAAD,CAAlB,CAAsBW,IAT1B,CAHJ;AAgBAR,IAAAA,sBAAsB,CAACS,IAAvB,CAA4BR,aAA5B,EAnB8E,CAmB9B;AAGnD;;AAED,SAAOD,sBAAP,CA7BwB,CA6BgB;AAE3C,C,CAED;;;AACA,SAASlB,mBAAT,CAA6B4B,SAA7B,EAAwC;AAEpC,MAAIC,KAAK,GAAG,EAAZ,CAFoC,CAErB;AAEf;;AACA,OAAK,IAAId,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGa,SAAS,CAACZ,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AAEvC;AACA,SAAK,IAAIe,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,SAAS,CAACb,CAAD,CAAT,CAAaQ,UAAjC,EAA6CO,CAAC,EAA9C,EAAkD;AAE9CD,MAAAA,KAAK,CAACF,IAAN,CAAWC,SAAS,CAACb,CAAD,CAApB,EAF8C,CAEjB;AAEhC;AACJ;;AAED,SAAOc,KAAP,CAfoC,CAepB;AACnB;;AAGD,SAASnC,SAAT,EAAoBE,WAApB","sourcesContent":["import jsonNoMetales from './jsonNoMetales'\nimport jsonElementos from './jsonElementos'\nimport pasarAJsonAnfigenosHalogenos from './pasarjsonAnfigenosHalogenos';\nimport numeroDeCartas from './palabrasClaves';\n\nimport shuffle from './barajar';\nimport Elemento from './objetosElementos';\n//Crea el array de sales binarias\n\nconst jsonDatosNoMetales = JSON.parse(jsonNoMetales);\n\nconst noMetales = pasarAJsonAnfigenosHalogenos(jsonDatosNoMetales);\n\n//Para coger los datos de el json\nvar jsonDatosElementos = JSON.parse(jsonElementos);\n\nvar arrayClases = pasarJsonAClases(); //Array que contiene todas las clases\n\n\n//Baraja barajada\nwindow.$baraja = shuffle(crearBarajaOrdenada(arrayClases));\n\nwindow.$cartasDisponibles = window.$baraja.splice(0, numeroDeCartas);\n\nwindow.$cartasDisponibles.sort(function (a, b) {\n    if (a.z > b.z) {\n        return 1;\n    }\n    else if (a.z < b.z) {\n        return -1;\n    }\n    else {\n        return 0;\n    }\n});\n\nwindow.$cartaRobarUsada = false\n\n//Funciones\n//Convertir en array numerico el string de las valencias ya que del json vienen en forma de texto\nfunction convertirArrayValencias(texto) {\n\n    //Mirar si el input es un numero o otra cosa\n    if (typeof texto === \"number\") {\n\n        //Si es número es decir que solo hay un numero ya que si hubiera más de un número estaría separado por una coma y sería un texto\n\n        return Array.from([texto]);\n\n    }\n    //Si no es un numero ejectura esto\n    else {\n\n        const coma = \",\"; //Almacena el elemento que partira el array\n\n        //Crea un array que cada casilla se corresponde un trozo del string partido| se parte cada vez que encuentre una coma\n        var arrayTexto = texto.split(coma);\n\n        //Transforma las casilleas en numero\n        for (var i = 0; i < arrayTexto.length; i++) {   //Coge la lonjitud del array y ejecuta el bucle a cada casilla del array\n\n            arrayTexto[i] = Number(arrayTexto[i]);  //Hace que los textos pases a ser números, ya que los números negativos sonalmacenados en forma de textos y los numeros positivos son akmacenados en forma de número\n\n        }\n\n        return arrayTexto;      // Devuelve el  array con el texto ya transformado en una array\n    }\n\n}\n\n//Convertir todos los elementos del json en clases de ojetos\nfunction pasarJsonAClases() {\n\n    var arrayContenedorObjetos = []; //Donde se guardaran las clases\n\n    // Se ejecuta una vez por cada elemento del json, cada vez que se haga la varible i que hrá función de contador sera aumentada automáticamente \"+1\"\n    for (var i = 0; i < jsonDatosElementos.length/*coger la lonjitud del json*/; i++) {\n\n        //Almacena en una variable en nuevo objeto que va a crear de forma temporal\n        var nuevoElemento =\n\n            //constructor\n            new Elemento(\n\n                jsonDatosElementos[i].z,                                //Coge del elemento i la z y se la pasa al objeto\n                jsonDatosElementos[i].nombre,                           //Coge del elemento i el nomabre y se la pasa al objeto\n                jsonDatosElementos[i].sq,                               //Coge del elemento i el simbolo químco y se la pasa al objeto\n                convertirArrayValencias(jsonDatosElementos[i].v),       //Coge del elemento i la el  texto de las valencias y los combierte en una array de numeros\n                jsonDatosElementos[i].repeticion,                       //Coge del elemento i la repetición y se la pasa al objeto\n                jsonDatosElementos[i].puntos,                           //Coge del elemento i los grupos y se la pasa al objeto\n                jsonDatosElementos[i].grupo,                            //Coge del elemento i el grupo y se la pasa al objeto\n                jsonDatosElementos[i].tipo\n\n            );\n\n        arrayContenedorObjetos.push(nuevoElemento);     //Añade a el array el nuebo objeto que se a creado\n\n\n    }\n\n    return arrayContenedorObjetos;          //Devuelve el array que contiene todos los objetos\n\n}\n\n//Crea la baraja, es decir; añade un objeto por cada repetición\nfunction crearBarajaOrdenada(elementos) {\n\n    var array = [];//Definir el Array que almacenra los numeros\n\n    //REpetir una vez por cada elemento\n    for (var i = 0; i < elementos.length; i++) {\n\n        //Repetir tantas veces como numero de repeticiones tenga el elemento\n        for (var j = 0; j < elementos[i].repeticion; j++) {\n\n            array.push(elementos[i]);    //Guardar el objeto del elemento en el array que almacena los números\n\n        }\n    }\n\n    return array;   //Devolver Array de aleatorios\n}\n\n\nexport { noMetales, arrayClases };\n"]},"metadata":{},"sourceType":"module"}