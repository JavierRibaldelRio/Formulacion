{"ast":null,"code":"import { hidruro } from \"./palabrasClaves\";\nimport { oxido } from \"./palabrasClaves\";\nimport { noMetales, arrayClases } from './main';\nimport crearMapaCompuesto from \"./crearMapaCompuesto\";\nimport buscarElementoPorSimbolo from \"./BuscarElementoConSimbolo\";\n\nfunction nombresEquivalentes(nombre) {\n  if (typeof nombre != \"string\") {\n    return false;\n  }\n\n  nombre = nombre.toLocaleLowerCase();\n  var nombreAutentico = \"\"; //Si nombre es igual a ...\n\n  switch (nombre) {\n    //hidruro\n    case hidruro:\n      nombreAutentico = \"hidrógeno\";\n      break;\n    //oxido\n\n    case oxido:\n      nombreAutentico = \"oxígeno\";\n      break;\n  } //Repetir una vez por toda la longitud de array anfigenos alogenos\n\n\n  for (var i = 0; i < noMetales.length; i++) {\n    //Si el nombre actual es igual al nuevo nombre del elemento\n    if (nombre === noMetales[i].nuevoNombreElemento.toLocaleLowerCase()) {\n      // Devolvemos el nombrea autentico (fluor, fluoruro) y lo pasamao a minusculas\n      nombreAutentico = buscarElementoPorSimbolo(arrayClases, noMetales[i].sq).nombre.toLocaleLowerCase();\n    }\n  }\n\n  return nombreAutentico;\n}\n\nexport default nombresEquivalentes;","map":{"version":3,"sources":["/home/javi/Programacion/Web/Formulacion/src/EquivalenciasNombres.js"],"names":["hidruro","oxido","noMetales","arrayClases","crearMapaCompuesto","buscarElementoPorSimbolo","nombresEquivalentes","nombre","toLocaleLowerCase","nombreAutentico","i","length","nuevoNombreElemento","sq"],"mappings":"AAAA,SAASA,OAAT,QAAwB,kBAAxB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,QAAvC;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AAEA,OAAOC,wBAAP,MAAqC,4BAArC;;AAEA,SAASC,mBAAT,CAA6BC,MAA7B,EAAqC;AAEjC,MAAI,OAAOA,MAAP,IAAiB,QAArB,EAA+B;AAE3B,WAAO,KAAP;AAEH;;AAEDA,EAAAA,MAAM,GAAGA,MAAM,CAACC,iBAAP,EAAT;AAEA,MAAIC,eAAe,GAAG,EAAtB,CAViC,CAYjC;;AACA,UAAQF,MAAR;AACI;AACA,SAAKP,OAAL;AAEIS,MAAAA,eAAe,GAAG,WAAlB;AACA;AAEJ;;AACA,SAAKR,KAAL;AACIQ,MAAAA,eAAe,GAAG,SAAlB;AACA;AAVR,GAbiC,CA0BjC;;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,SAAS,CAACS,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AAEvC;AACA,QAAIH,MAAM,KAAKL,SAAS,CAACQ,CAAD,CAAT,CAAaE,mBAAb,CAAiCJ,iBAAjC,EAAf,EAAqE;AAEjE;AACAC,MAAAA,eAAe,GAAGJ,wBAAwB,CAACF,WAAD,EAAcD,SAAS,CAACQ,CAAD,CAAT,CAAaG,EAA3B,CAAxB,CAAuDN,MAAvD,CAA8DC,iBAA9D,EAAlB;AAGH;AAEJ;;AAED,SAAOC,eAAP;AAEH;;AAED,eAAeH,mBAAf","sourcesContent":["import { hidruro } from \"./palabrasClaves\";\nimport { oxido } from \"./palabrasClaves\";\n\nimport { noMetales, arrayClases } from './main'\nimport crearMapaCompuesto from \"./crearMapaCompuesto\";\n\nimport buscarElementoPorSimbolo from \"./BuscarElementoConSimbolo\";\n\nfunction nombresEquivalentes(nombre) {\n\n    if (typeof nombre != \"string\") {\n\n        return false;\n\n    }\n\n    nombre = nombre.toLocaleLowerCase();\n\n    var nombreAutentico = \"\";\n\n    //Si nombre es igual a ...\n    switch (nombre) {\n        //hidruro\n        case hidruro:\n\n            nombreAutentico = \"hidrógeno\";\n            break;\n\n        //oxido\n        case oxido:\n            nombreAutentico = \"oxígeno\";\n            break;\n\n    }\n    //Repetir una vez por toda la longitud de array anfigenos alogenos\n    for (var i = 0; i < noMetales.length; i++) {\n\n        //Si el nombre actual es igual al nuevo nombre del elemento\n        if (nombre === noMetales[i].nuevoNombreElemento.toLocaleLowerCase()) {\n\n            // Devolvemos el nombrea autentico (fluor, fluoruro) y lo pasamao a minusculas\n            nombreAutentico = buscarElementoPorSimbolo(arrayClases, noMetales[i].sq).nombre.toLocaleLowerCase();\n\n\n        }\n\n    }\n\n    return nombreAutentico;\n\n}\n\nexport default nombresEquivalentes;"]},"metadata":{},"sourceType":"module"}